%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dot version 1.11.20040228.0515 (Sat Feb 28 05:17:53 UTC 2004)
%%For: Bill Gates
%%Title: program
%%Pages: 1
%%BoundingBox: 34 42 141 190
%%PageOrder: Ascend
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def
/showpage { } def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 4 1
%%PageBoundingBox: 36 36 157 215
%%PageOrientation: Portrait
gsave
35 35 122 180 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Times-Roman set_font

%	x
gsave 10 dict begin
bold
gsave 10 dict begin
16.00 /Times-Roman set_font
31 146 moveto 10 -0.5 (x) alignedtext
end grestore
end grestore

%	0
gsave 10 dict begin
31 98 27 18 ellipse_path
stroke
gsave 10 dict begin
31 94 moveto 25 -0.5 (r[n,x]) alignedtext
end grestore
end grestore

%	x -> 0
newpath 31 134 moveto
31 131 31 129 31 126 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 35 126 moveto
31 116 lineto
28 126 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 35 126 moveto
31 116 lineto
28 126 lineto
closepath
stroke
end grestore

%	1
gsave 10 dict begin
31 30 27 18 ellipse_path
stroke
31 30 31 22 ellipse_path
stroke
gsave 10 dict begin
31 26 moveto 25 -0.5 (r[n,x]) alignedtext
end grestore
end grestore

%	1 -> 1
gsave 10 dict begin
dotted
newpath 60 22 moveto
69 22 76 25 76 30 curveto
76 33 74 35 70 36 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 69 33 moveto
60 38 lineto
70 39 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 69 33 moveto
60 38 lineto
70 39 lineto
closepath
stroke
end grestore
gsave 10 dict begin
79 26 moveto 6 -0.5 (n) alignedtext
end grestore
end grestore

%	1 -> 1
gsave 10 dict begin
dotted
newpath 54 15 moveto
72 10 90 15 90 30 curveto
90 42 78 48 64 47 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 64 44 moveto
54 45 lineto
63 50 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 64 44 moveto
54 45 lineto
63 50 lineto
closepath
stroke
end grestore
gsave 10 dict begin
98 26 moveto 16 -0.5 (t[n]) alignedtext
end grestore
end grestore

%	0 -> 1
gsave 10 dict begin
dotted
newpath 27 80 moveto
26 77 25 75 25 72 curveto
25 69 25 65 25 62 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 28 62 moveto
26 52 lineto
22 62 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 28 62 moveto
26 52 lineto
22 62 lineto
closepath
stroke
end grestore
gsave 10 dict begin
31 62 moveto 6 -0.5 (n) alignedtext
end grestore
end grestore

%	0 -> 1
newpath 33 80 moveto
33 77 34 74 34 72 curveto
34 69 34 65 34 62 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 38 62 moveto
34 52 lineto
31 62 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 38 62 moveto
34 52 lineto
31 62 lineto
closepath
stroke
end grestore
gsave 10 dict begin
42 62 moveto 16 -0.5 (t[n]) alignedtext
end grestore

%	0 -> 0
newpath 50 85 moveto
61 83 72 87 72 98 curveto
72 105 67 110 60 111 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 60 108 moveto
50 111 lineto
60 115 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 60 108 moveto
50 111 lineto
60 115 lineto
closepath
stroke
end grestore
gsave 10 dict begin
80 94 moveto 16 -0.5 (t[n]) alignedtext
end grestore
endpage
showpage
grestore
%%PageTrailer
%%EndPage: 4
%%Trailer
end
restore
%%EOF
