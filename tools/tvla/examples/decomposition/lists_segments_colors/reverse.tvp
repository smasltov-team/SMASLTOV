///////
// Sets

%s PVar {x, y, t, xn}
%s BVar {}
%s colors {}

#include "predicates.tvp"

%%

#include "actions.tvp"

%%

///////////////////////////////////////////////////////////////////////////////
// Transition system for a function that reverses a singly-linked list in-situ.

L1  Set_Null_L(y)      L2   // y = NULL;
L2  Is_Null_Var(x)     preexit1 // while (x != NULL) {
L2  Is_Not_Null_Var(x) L3
L3  Set_Null_L(t)      L3a
L3a Copy_Var_L(t, y)   L4   //   t = y;
L4  Set_Null_L(y)      L4a
L4a Copy_Var_L(y, x)   L5   //   y = x;
L5  Get_Next_L(xn, x)  L5a  //   xn = x->n;
L5a Set_Null_L(x)      L5b
L5b Copy_Var_L(x, xn)  L5c  //   x = xn;
L5c Set_Null_L(xn)     L6
L6  Set_Next_Null_L(y) L7   //   y->n = NULL;
L7  Set_Next_L(y, t)   L2   //   y->n = t;
                           // }
preexit1 Set_Null_L(x) preexit2
preexit2 Set_Null_L(t) exit
exit Assert_ListInvariants(y) error
exit Assert_No_Leak(y)        error
