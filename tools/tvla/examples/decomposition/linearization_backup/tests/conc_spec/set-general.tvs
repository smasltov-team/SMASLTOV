/*****
* set.tvs
* Initial structure for set implementation.
* The list has two dummy node: Head with value -inf and Tail with value +inf. 
*****/

//All local variables initially null.
//Both locks initially unacquired.

//empty set
%t = { tOne(general_g1)
       #if(1 < GNUM)
       , tTwo(general_g2)
       #endif
       #if(2 < GNUM)
       , tThree(general_g3)
       #endif
       #if(3 < GNUM)
       , tFour(general_g4)
       #endif 
     }
%n = { uh, ut }
%p = { 
    
    ready = { tOne 
              #if(1 < GNUM)
              , tTwo
              #endif
              #if(2 < GNUM)
              , tThree
              #endif
              #if(3 < GNUM)
              , tFour
              #endif  
     }

    r_by[Head] = {uh}

    //r_by[Head_seq] = {uh}
    
    r_by[Tail] = {ut}

    //r_by[Tail_seq] = {ut}

    rv[n] = {uh -> ut}

    dle = {uh->uh, uh->ut, ut->ut}

    inSOrder[dle,n] = {uh,ut}

     bn[n] = {uh->uh, ut->ut, uh->ut
              , tOne->tOne 
              #if(1 < GNUM)
              , tTwo->tTwo
              #endif
              #if(2 < GNUM)
              , tThree->tThree
              #endif
              #if(3 < GNUM)
              , tFour->tFour
              #endif     
    }
    
    rt[Head,n] = {uh,ut}   

}


//set with one element
/*
%t = { tOne(general_one), tTwo(nop) }
%n = { uh, u, ut }
%p = { 
    
    ready = { tOne, tTwo }
    
    r_by[Head] = {uh}

    r_by[Head_seq] = {uh}

    r_by[Tail] = {ut}

    r_by[Tail_seq] = {ut}

    rv[n] = { uh -> u, u -> ut }

    //value of single element is strictly between -inf and +inf
    dle = { uh->uh, u->u, ut->ut, uh->u, u->ut, uh->ut }

    inOrder[dle,n] = {uh,u,ut} 

    bn[n] = {uh->u, u->ut, uh->ut}

    rt[Head,n] = {u,ut}
}
*/

/*
//set with two elements or more

%t = { tOne(general_one), tTwo(general_two) }
%n = { uh, u, ut }
%p = { 
    
    ready = { tOne, tTwo }
    sm = {u: 1/2}
    
    r_by[Head] = {uh}

    //r_by[Head_seq] = {uh}

    r_by[Tail] = {ut}

    //r_by[Tail_seq] = {ut}

    rv[n] = { uh -> u: 1/2, u -> u: 1/2, u -> ut: 1/2 }

    dle = { uh->uh, u->u:1/2, ut->ut, uh->u, u->ut, uh->ut }

    inSOrder[dle,n] = {uh,u,ut}

    bn[n] = {uh->uh, ut->ut, tOne->tOne, tTwo->tTwo, uh->u, u->u:1/2, u->ut, uh->ut}

    rt[Head,n] = {uh,u,ut}

    member = {u}

}
*/
