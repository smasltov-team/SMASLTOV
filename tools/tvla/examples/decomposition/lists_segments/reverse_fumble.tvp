///////
// Sets

%s PVar {x, y, t}

#include "predicates.tvp"

%%

#include "actions.tvp"

%%

////////////////////////////////////////////////////////////////////////////
// Transition system for a function that attempts to reverse a singly-linked
// list in-situ but loses the elements of the list.

L1 Set_Null_L(y)      L2   // y = NULL;
L2 Is_Null_Var(x)     exit // while (x != NULL) {
L2 Is_Not_Null_Var(x) L3
L3 Get_Next_L(t, x)   L4   //   t = x->n;
L4 Set_Next_Null_L(x) L5   //   x->n = NULL;
L5 Set_Next_L(x, y)   L6   //   x->n = y;
L6 Copy_Var_L(x, t)   L7   //   x = t;
L7 Copy_Var_L(y, x)   L2   //   y = x;
                           // }
exit Assert_ListInvariants(y) error
exit Assert_No_Leak(y)        error                          