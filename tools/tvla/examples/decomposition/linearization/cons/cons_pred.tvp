/***********************************************************
* set_pred.tvp
***********************************************************/

%p tr_scheduled(v) unique
foreach (loc in locations) {
  %p at[loc](thread) 
  %r at[loc](v) ==> isthread(v)
  %r !isthread(v) ==> !at[loc](v)
}

foreach (tname in Threads) {
  %p tname(v) unique
}


foreach (bool in BoolLocals) {
   %p bool(v)
   %r bool(v) ==> !isthread(v)
   %r isthread(v) ==> !bool(v)
}

#define TRUE isthread
%p FALSE(v)

foreach (tn1 in Threads) {
	%r tn1(v) ==> isthread(v)
	%r !isthread(v) ==> !tn1(v)
	%r A(v) !tn1(v) ==> 0
	
	foreach (tn2 in Threads-{tn1}) {
  		%r tn1(v) ==> !tn2(v)
  	}
}

/**********************************************/
/*************** Core Predicates **************/

//referenced-by predicate for global variables (fields of shared ds)
foreach (fld in GlobalFields) {
    %p r_by[fld](o) unique pointer
}

//referenced-by prediacte for thread-local variables
#ifdef BINARY
foreach (fld in LocalFields) {
    %p fld(v1,v2) function
    %r !isthread(w1) ==> !fld(w1,v1)
    %r isthread(v1) ==> !fld(w1,v1)
}
#endif
foreach (nm in Threads) {
    foreach (fld in LocalFields) {
#ifdef BINARY
        %i r_by[fld,nm](v1) = E(w1) nm(w1) & fld(w1,v1) pointer unique
        %r nm(w1) & r_by[fld,nm](v1) ==> fld(w1,v1)
#else
        %p r_by[fld,nm](v1) pointer unique
#endif
    }
}

//value of node v_1 is less or equal to value of node v_2

//thread t (general client) is executing operation op (IN THE NON-COMMON PART OF THE CODE)
foreach (op in Operations) {
   %p choice[op](t) 
   %r choice[op](v) ==> isthread(v)
   %r !isthread(v) ==> !choice[op](v)
}
/*
foreach (var in LocalFields) {
    %p is[var](v) nonabs
    foreach (tn1 in Threads) {
       foreach (tn2 in (Threads) - {tn1}) {
          %r !is[var](v) & r_by[var, tn1](v) ==> !r_by[var, tn2](v) 
       } 
    } 
}
*/
