/************************************************************************
 * pldi 
 ***********************************************************************/


/*********************** Sets ******************************/

%s GlobalFields {c}

%s LocalFields {x_c, x_p}
%s BoolLocals {markBit}

%s NextFields {n}

//////////////////////// Names of threads ////////////////////
//// General client
%s Threads {c1,c2,p1,p2}
//////////////////////////////////////////////////////////////

%s locations { 
 l_dispatch, ld_2, li_1, ld_3, done
} 

%s Operations {consumer,producer}

/**************** Predicates **************/

#include "cons_pred.tvp"
foreach (tn in Threads) {
  %dname (tn(v) | 
         |/{ r_by[fld,tn](v) : fld in LocalFields} |
         |/{ r_by[fld](v) : fld in GlobalFields}) &
         &/{&/{ !r_by[fld,other](v)  : fld in LocalFields } 
	 & !other(v) : other in (Threads)-{ tn }} tn
}

%%
/********************* Actions *******************/

#include "cons_stat.tvp"

/**************** Program *********************/

%%

/***********************************************/
/************** Producer Threads ****************/


l_ready schedule(p1,l_dispatch) l_dispatch 
l_ready schedule(p2,l_dispatch) l_dispatch 
l_ready schedule(c1,l_dispatch) l_dispatch 
l_ready schedule(c2,l_dispatch) l_dispatch 

l_dispatch setChoice(p1,producer) l_00  
l_dispatch setChoice(c1,consumer) l_00 
l_dispatch setChoice(p2,producer) l_00  
l_dispatch setChoice(c2,consumer) l_00 

//****** Code for one thread *****************************


l_00 Clear(p1) ll_dispatch
l_00 Clear(p2) ll_dispatch
l_00 Clear(c1) ll_dispatch
l_00 Clear(c2) ll_dispatch

ll_dispatch isChoice(p1,producer) li_0                   
ll_dispatch isChoice(p2,producer) li_0                   
ll_dispatch isChoice(c1,consumer) ld_1                   
ll_dispatch isChoice(c2,consumer) ld_1                   


/* Producer */
l_ready schedule(p1,li_1) li_1
l_ready schedule(p2,li_1) li_1

li_0 assignNew(p1,x_p) li_0p
li_0 assignNew(p2,x_p) li_0p
li_0p unschedule(p1,li_1) l_ready
li_0p unschedule(p2,li_1) l_ready
li_1 isNull(p1,c) li_2
li_1 isNull(p2,c) li_2

li_2 produce(p1,c,x_p) l_exit	
li_2 produce(p2,c,x_p) l_exit	


l_ready schedule(c1,ld_3) ld_3
l_ready schedule(c2,ld_3) ld_3
ld_1 isNotNull(c1,c) ld_2
ld_1 isNotNull(c2,c) ld_2

ld_2 consume(c1,x_c,c) ld_2p
ld_2 consume(c2,x_c,c) ld_2p

ld_2p unschedule(c1,ld_3) l_ready
ld_2p unschedule(c2,ld_3) l_ready

ld_3 setMarkBit(c1,x_c) l_exit
ld_3 setMarkBit(c2,x_c) l_exit
l_exit unschedule(p1,done) l_ready
l_exit unschedule(p2,done) l_ready
l_exit unschedule(c1,done) l_ready
l_exit unschedule(c2,done) l_ready


