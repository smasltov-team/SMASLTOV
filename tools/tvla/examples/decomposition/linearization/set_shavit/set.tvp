/************************************************************************
 * pldi 
 ***********************************************************************/


/*********************** Sets ******************************/

%s GlobalFields {Head,Tail}

%s LocalFields {x_i,pred,curr,next,res,res_seq}
%s LocalFieldsDle {curr}
%s BoolLocals {currMark}
%s BoolFields {markBit}

//%s LocalBooleans {res,res_seq}

%s NextFields {n}

//////////////////////// Names of threads ////////////////////
//// General client
%pset Threads {t1,t2}
//////////////////////////////////////////////////////////////

%s locations { 
   l_dispatch, l_1, l_2, l_3, ld_2, ld_2un, ld_3, ld_3a, ld_3b, ld_4, ld_5, ld_6, ld_7, ld_9, ld_10, ld_13, 
   li_2, li_3, li_3a, li_3b, li_4, li_7, li_9, li_10, li_13
} 

%s Operations {insert,delete,find}

/**************** Predicates **************/

#include "set_pred.tvp"
foreach (tn in Threads) {
  %dname (tn(v) | locked_by[tn](v) |  rt[Head](v) | rt[Tail](v) |
         |/{ r_by[fld,tn](v) : fld in LocalFields} |
         |/{ r_by[fld](v) : fld in GlobalFields}) &
         &/{&/{ !r_by[fld,other](v)  : fld in LocalFields } & !locked_by[other](v) & !other(v) : other in (Threads)-{ tn }} tn
}

%%
/********************* Actions *******************/

#include "set_stat.tvp"

/**************** Program *********************/

%%

/***********************************************/
/************** Producer Threads ****************/


l_ready schedule(l_dispatch) l_dispatch 

l_dispatch setChoice(insert) l_00          /*local action */            
l_dispatch setChoice(delete) l_00          /*local action  /DEBUG COMMENT  */    
l_dispatch setChoice(find) l_00          /*local action  /DEBUG COMMENT  */    

//****** Code for one thread *****************************

/* locate     */                                            
/* concurrent */                                            
l_ready schedule(l_1) l_1 
l_ready schedule(l_2) l_2 
l_ready schedule(l_3) l_3 

l_00 Clear() l_00a
l_00a assignNew(x_i) l_1			/*x_i expected to be null, local action */ 

l_0 Clear2() l_0p
l_0p unschedule(l_1) l_ready

l_1 assignFromGlbField(pred,Head) l_1p		/*pred expected to be null */          
l_1p unschedule(l_2) l_ready

l_2 assignFromNextField(curr, pred) l_2p	/*pred expected to be null */          
l_2p unschedule(l_3) l_ready

l_3 isDataGreaterEq(curr,x_i) ll_dispatch	/*local action */              
l_3 isDataLess(curr,x_i) l_4			/*local action */              

l_4 assignNull(pred) l_5			/*atomic with assignRef / local action   */    
l_5 assignRef(pred,curr) l_6			/*local action  */             
l_6 assignNull(curr) l_7			/*atomic with assignFromNextField / local action  */   
l_7 assignFromNextField(curr,pred) l_7p 
l_7p unschedule(l_3) l_ready

/*final actions - common to all operations, including linearization point */
                                            
/*choice of transaction according to concurrent choice */               
ll_dispatch isChoice(insert) li_1                   
ll_dispatch isChoice(delete) ld_1                   
ll_dispatch isChoice(find) lf_1                 
					    
l_exit ClearOp() l_dispatch			/*local action  */     

/*in all operations: res expectd to be null*/

/* find */
lf_1 isDataEq(curr, x_i) lf_1a			/*local action */                  
lf_1 isDataNotEq(curr, x_i) lf_3		/* michal - lp */                  

lf_1a isDataMarked(curr) lf_3
lf_1a isDataNotMarked(curr) lf_2

lf_2 assignRef(res,curr) l_exit
lf_3 assignNull(res) l_exit    

/*insert */
l_ready schedule(li_2) li_2
l_ready schedule(li_3a) li_3a
l_ready schedule(li_3b) li_3b
l_ready schedule(li_4) li_4
l_ready schedule(li_7) li_7
l_ready schedule(li_9) li_9
l_ready schedule(li_10) li_10
l_ready schedule(li_13) li_13

li_1 succLockNode(pred) li_1p
//li_1 failLockNode(pred) l_0

li_1p unschedule(li_2) l_ready
li_2 succLockNode(curr) li_3
//li_2 failLockNode(curr) li_2un
// Missing interleaving michal - why?
li_2un unlockNode(pred) l_0

li_3 isNextEq(pred, curr) li_3p
li_3 isNextNotEq(pred, curr) li_12 
li_3p unschedule(li_3a) l_ready

li_3a isDataMarked(pred) li_12
li_3a isDataNotMarked(pred) li_3ap
li_3ap unschedule(li_3b) l_ready

li_3b isDataMarked(curr) li_12
li_3b isDataNotMarked(curr) li_3bp
li_3bp unschedule(li_4) l_ready

li_4 isDataEq(curr, x_i) li_12 
li_4 isDataNotEq(curr, x_i) li_6

li_6 updateNextNoIncoming(x_i, curr) li_6p
// Missing interleaving
li_6p unschedule(li_7) l_ready
li_7 updateNext(pred, x_i) li_8
li_8 removeDnode(x_i) li_8p
li_8p unschedule(li_9) l_ready
li_9 unlockNode(curr) li_9p  
li_9p unschedule(li_10) l_ready
li_10 unlockNode(pred) li_11  
li_11 assignRef(res,x_i) l_exit

li_12 unlockNode(curr) li_12p 
li_12p unschedule(li_13) l_ready
li_13 unlockNode(pred) li_14  
li_14 assignNull(res) l_exit   

/*delete*/
l_ready schedule(ld_2) ld_2 
l_ready schedule(ld_2un) ld_2un 
l_ready schedule(ld_3a) ld_3a 
l_ready schedule(ld_3b) ld_3b 
l_ready schedule(ld_4) ld_4 
l_ready schedule(ld_5) ld_5 
l_ready schedule(ld_6) ld_6 
l_ready schedule(ld_7) ld_7 
l_ready schedule(ld_9) ld_9 
l_ready schedule(ld_10) ld_10 
l_ready schedule(ld_13) ld_13 
 
ld_1 succLockNode(pred) ld_1p
//ld_1 failLockNode(pred) l_0

ld_1p unschedule(ld_2) l_ready
ld_2 succLockNode(curr) ld_3
//ld_2 failLockNode(curr) ld_2p
ld_2p unschedule(ld_2un) l_ready
ld_2un unlockNode(pred) l_0

// Missing interleaving * 3
ld_3 isNextEq(pred, curr) ld_3p
ld_3 isNextNotEq(pred, curr) ld_12
ld_3p unschedule(ld_3a) l_ready

ld_3a isDataMarked(pred) ld_12
ld_3a isDataNotMarked(pred) ld_3ap
ld_3ap unschedule(ld_3b) l_ready

ld_3b isDataMarked(curr) ld_12
ld_3b isDataNotMarked(curr) ld_3bp
ld_3bp unschedule(ld_4) l_ready

ld_4 isDataEq(curr, x_i) ld_4p            
ld_4 isDataNotEq(curr, x_i) ld_12         
ld_4p unschedule(ld_5) l_ready
ld_5 assignFromNextField(next, curr) ld_5p
ld_5p unschedule(ld_6) l_ready
ld_6 setMarkBit(curr) ld_6p
ld_6p unschedule(ld_7) l_ready
ld_7 updateNext(pred, next) ld_7p           
ld_7p unschedule(ld_9) l_ready

ld_9 unlockNode(curr) ld_9p                 
ld_9p unschedule(ld_10) l_ready
ld_10 unlockNode(pred) ld_11                 
ld_11 assignRef(res,x_i) l_exit               

// Missing interleaving
ld_12 unlockNode(curr) ld_12p                   
ld_12p unschedule(ld_13) l_ready               
ld_13 unlockNode(pred) ld_14                     
ld_14 assignNull(res) l_exit            

