// $Id: nbq_dequeue_full.tvs 1848 2007-11-01 14:15:07Z rumster $
// note -
// when UBT is defined, this initial configuration does not represents the case
// of a single thread due to values of is/ivs predicates (sharing) which imply that more than
// a single thread exists.

%t = { tcns(consumer) }
%n = { z, s_succ, queue, element1, element2, element3 }
%p = {
    ready = { tcns }
    #ifdef UBT
    sm = { s_succ : 1/2, tcns : 1/2, element2: 1/2 }
    #else
    sm = { s_succ : 1/2, element2 : 1/2 }
    #endif
    succ = { z -> s_succ : 1/2 , s_succ -> s_succ : 1/2}
    //rt[z,succ] = { z, s_succ }
    rv[this] = { tcns->queue }
    r_by[this] = { queue }
    reach[this] = { queue }
    is_nat = { z, s_succ }
    zero = { z }
    rv[Tail] = { queue -> element3 }
    rv[Head] = { queue -> element1 }
    iv[Tail] = { queue -> z }
    iv[Head] = { queue -> z }

    i_by[Tail] = { z }
    i_by[Head] = { z }

    reach[Tail] = { element3 }
    reach[Head] = { element1 }
    r[Head,n] =   { element1, element2, element3 }
    tn = { element1 -> element1, element1 -> element2, element1 -> element3,
           element2 -> element2, element2->element3, element3->element3,
           queue -> queue }
    reach[n] = { element2, element3 }
    r_by[n] = { element2, element3 }
    r_by[Tail] = { element3 }
    r_by[Head] = { element1 }

    rv[n] =  { element1 -> element2 : 1/2, element2 -> element2 : 1/2, element2 -> element3 : 1/2 }

    #ifdef UBT
    is[this] = { queue }
    #endif
}
