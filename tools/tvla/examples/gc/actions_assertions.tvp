%action SetNotEqualReachset(s, pvar) {
    %t s + ".setNotEqualReachset(" + pvar + ")"
    %f { E(v) !(r[pvar](v) <-> set[s](v)) }
    %p !(r[pvar](v) <-> set[s](v))
    %message r[pvar](v) & !set[s](v) ->
             "There may exist an individual that is reachable from " + pvar + ",\nbut is not in " + s
    %message set[s](v) & !r[pvar](v) ->
             "There may exist an individual that is in " + s + ",\nbut is not reachable from " + pvar
}

%action SetEqualReachset(s, pvar) {
    %t s + ".setEqualReachset(" + pvar + ")"
    %f { A(v) (r[pvar](v) <-> set[s](v)) }
    %p A(v) (r[pvar](v) <-> set[s](v))
}

%action SetEqualComplementOfReachset(s, pvar) {
    %t s + ".SetEqualComplementOfReachset(" + pvar + ")"
    %f { A(v) !r[pvar](v) <-> set[s](v) }
    %p (A(v) !r[pvar](v) <-> set[s](v))
}

%action SetNotEqualComplementOfReachset(s, pvar) {
    %t s + ".SetNotEqualComplementOfReachset(" + pvar + ")"
    %f { E(v) !(!r[pvar](v) <-> set[s](v)) }
    %p (!(!r[pvar](v) <-> set[s](v)))
    %message r[pvar](v) & set[s](v) ->
             "There may exist an individual that is reachable from " + pvar + ",\nand is in " + s
    %message !set[s](v) & !r[pvar](v) ->
             "There may exist an individual that is not in " + s + ",\nand is not reachable from " + pvar
}